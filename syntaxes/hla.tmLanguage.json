{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "hla",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#chars"
		},
		{
			"begin": "^\\s*((#)\\s*(include|includeonce(?:_next)?|import))\\b\\s*",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.directive.hla"
				},
				"2": {
					"name": "punctuation.definition.directive.hla"
				}
			},
			"end": "(?=(?://|/\\*))|(?<!\\\\)(?=\\n)",
			"name": "meta.preprocessor.include.hla",
			"patterns": [
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.hla"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.hla"
						}
					},
					"name": "string.quoted.double.include.hla"
				}
			]
		},
		{
			"match": "\\b(static|readonly|var|const|type)\\b",
			"name": "storage.modifier.hla"
		},
		{
			"match": "\\b(mov|add|sub|bound|dec|shl|and|or|rol|shr|into|lea|not|cbw|cwde|movsx|neg|push|pop)\\b",
			"name": "support.function.hla"
		},
		{
			"match": "\\b(eax|ax|ah|al|ebx|bx|bh|bl|ecx|cx|ch|cl|edx|dx|dh|dl|esi|si|edi|di|ebp|bp|esp|sp)\\b",
			"name": "markup.italic.hla"
		},
		{
			"match": "\\b(byte|boolean|enum|uns8|int8|char|word|uns16|int16|dword|uns32|int32|real32|string|pointer|uns64|int64|qword|thunk|real64|tbyte|real80|uns128|int128|lword|cset)\\b",
			"name": "storage.type.hla"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.hla",
				"match": "\\b(program|begin|end|for|endfor|if|then|do|else|elseif|endif|record|endrecord|repeat|until|try|exception|endtry|forever|while|endwhile|breakif|call|procedure|unprotected|break)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.double.hla",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.hla",
					"match": "\\\\."
				}
			]
		},
		"chars": {
			"name": "string.quoted.single.hla",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.hla",
					"match": "\\\\."
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.hla"
						}
					},
					"match": "/\\*\\*/",
					"name": "comment.block.empty.hla"
				},
				{
					"begin": "/\\*",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.hla"
						}
					},
					"end": "\\*/",
					"name": "comment.block.hla"
				},
				{
					"begin": "(^[ \\t]+)?(?=//)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.whitespace.comment.leading.hla"
						}
					},
					"end": "(?!\\G)",
					"patterns": [
						{
							"begin": "//",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.comment.hla"
								}
							},
							"end": "\\n",
							"name": "comment.line.double-slash.hla"
						}
					]
				}
			]
		}
	},
	"scopeName": "source.hla"
}